/**
 * This project is mostly just a placeholder for future 'openshift' npm module work. 
 * @author TBD
 */
var request = require('request');

var Openshift = function (setup) {
  //process array of setup vars, command line args, config files
  // establish a consistent internal variable configuration
  if (!(this instanceof Openshift)) {
    return new Openshift(setup);
  }
};

Openshift.prototype = {
  //shared functions and static vars
  env:  process.env,
  ip:   process.env.OPENSHIFT_INTERNAL_IP,
  port: process.env.OPENSHIFT_INTERNAL_PORT,
  dns:  process.env.OPENSHIFT_APP_DNS,
  hostname: process.env.OPENSHIFT_APP_DNS,
  siblings: [],
  scale_up: function(){
    //haproxy_ctld --up
  },
  scale_down: function(){
    //haproxy_ctld --down
  },
  scale_min: function(min){
    if(min){
      console.log('setting min scale to: ' + min);
      //rhc cartridge-scale nodejs-0.6 -a nodefly --min 3 --max 5
    }
  },
  scale_max: function(max){
    if(max){
      console.log('setting max scale to: ' + max);
      //rhc cartridge-scale nodejs-0.6 -a nodefly --min 3 --max 5
    }
  },
  scale_limits: function(min, max){
    this.scale_min(min);
    this.scale_max(max); 
  },
  auto_scale: function( true_false ){
    if(true_false === false || true_false == 'off'){
      this.auto_scale_off();
    }else{
      this.auto_scale_on();
    }
  },
  auto_scale_on: function(){
    // haproxy_ctld --up
    // haproxy_ctld_daemon --start 
  },
  auto_scale_off: function(){
    // haproxy_ctld --down
    // haproxy_ctld_daemon --stop 
  },
  refresh_group: function(){
    request(this.hostname + '/haproxy-status/;csv', function(error, response, body){
      if (!error && response.statusCode == 200) {
        console.log(body);
      }
    });
  }
};

(function(){
  // init(), update vars if running in local development.
  if(Openshift.ip == undefined){ Openshift.ip = '127.0.0.1';}
  if(Openshift.port == undefined){ Openshift.port = '8080';}
  if(Openshift.dns == undefined){ Openshift.dns = 'localhost';}
  if(Openshift.hostname == undefined){ Openshift.hostname = 'localhost';}
}());


module.exports = Openshift;
